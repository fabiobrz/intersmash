<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2014, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss.intersmash</groupId>
        <artifactId>wstrust-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>wstrust-service</artifactId>
    <packaging>war</packaging>

    <name>Intersmash Demos : (Wildfly): wstrust-parent (service)</name>

    <properties>
        <formatting-style-base-directory>${project.parent.parent.parent.basedir}/ide-config
        </formatting-style-base-directory>
        <version.maven-war-plugin>3.3.2</version.maven-war-plugin>
        <!--
            Default version for the Bootable JAR Plugin is set here and can be overridden,
            e.g. also for pulling the productized version
        -->
        <version.wildfly-jar-maven-plugin>10.0.0.Final</version.wildfly-jar-maven-plugin>

        <version.wildfly.feature-pack>29.0.1.Final</version.wildfly.feature-pack>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jboss.ws.cxf</groupId>
            <artifactId>jbossws-cxf-client</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.maven-war-plugin}</version>
                <configuration>
                    <!-- exclude all jars in WEB-INF/lib dir except for wstrust-shared-*.jar -->
                    <packagingExcludes>%regex[^WEB-INF\/lib\/(?!wstrust-shared-.*\.jar$).*$]</packagingExcludes>
                    <warName>ROOT</warName>
                    <archive>
                        <manifestFile>${project.basedir}/src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>war</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
                <version>${version.wildfly-jar-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>create-bootable-jar-openshift</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>

                        <!-- this is common config used by child modules -->
                        <configuration>
                            <output-file-name>${project.build.finalName}-bootable-openshift.jar</output-file-name>
                            <feature-packs>
                                <feature-pack>
                                    <location>org.wildfly:wildfly-galleon-pack:${version.wildfly.feature-pack}</location>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>cloud-server</layer>
                                <layers>webservices</layers>
                            </layers>
                            <cli-sessions>
                                <cli-session>
                                    <properties-file>${project.basedir}/target/jbws-testsuite-default-elytron-CLI.properties</properties-file>
                                    <script-files>
                                        <script>./scripts/jbws-testsuite-default-elytron.cli</script>
                                    </script-files>
                                </cli-session>
                            </cli-sessions>
                            <plugin-options>
                                <!-- this flag is super necessary: otherwise wildfly-maven-plugin and
                                     wildfly-jar-maven-plugin would collide  -->
                                <jboss-fork-embedded>true</jboss-fork-embedded>
                            </plugin-options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Install artifacts created by wildfly-jar-maven-plugin plugin
                     manually since the plugin installs it under same name -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-bootable-jar-openshift</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <packaging>jar</packaging>
                            <file>${project.build.directory}/${project.build.finalName}-bootable-openshift.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>create-server-config</id>
                        <phase>generate-sources</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <path id="path-testResourcesDir">
                                    <pathelement location="${project.basedir}/src/test/resources" />
                                </path>

                                <path id="path-usersPropFile">
                                    <pathelement location="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-users.properties" />
                                </path>

                                <path id="path-rolesPropFile">
                                    <pathelement location="${basedir}/src/test/resources/jaxws/samples/wsse/policy/jaas/digest/WEB-INF/jbossws-roles.properties" />
                                </path>

                                <path id="path-keystorePath">
                                    <pathelement location="${basedir}/src/test/etc/test.keystore" />
                                </path>

                                <path id="path-project.build.directory">
                                    <pathelement location="${project.basedir}/target" />
                                </path>
                                <!--Convert these path values to unix/platform-independent format and later output these value to property file -->
                                <pathconvert targetos="unix" property="value-testResourcesDir" refid="path-testResourcesDir">
                                </pathconvert>

                                <pathconvert targetos="unix" property="value-usersPropFile" refid="path-usersPropFile">
                                </pathconvert>

                                <pathconvert targetos="unix" property="value-rolesPropFile" refid="path-rolesPropFile">
                                </pathconvert>

                                <pathconvert targetos="unix" property="value-keystorePath" refid="path-keystorePath">
                                </pathconvert>

                                <pathconvert targetos="unix" property="value-project.build.directory" refid="path-project.build.directory">
                                </pathconvert>

                                <propertyfile file="${value-project.build.directory}/jbws-testsuite-default-elytron-CLI.properties">
                                    <entry key="testResourcesDir" value="${value-testResourcesDir}" />
                                    <entry key="usersPropFile" value="${value-usersPropFile}" />
                                    <entry key="rolesPropFile" value="${value-rolesPropFile}" />
                                    <entry key="keystorePath" value="${value-keystorePath}" />
                                </propertyfile>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
